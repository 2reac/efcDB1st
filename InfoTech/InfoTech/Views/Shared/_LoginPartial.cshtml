@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            @if (User.IsInRole("User"))
            {
            @await Component.InvokeAsync("Cart")
            }
            <li class="nav-item font-weight-bold">
                <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello, @UserManager.GetUserName(User)!</a>
            </li>
            <li class="nav-item">
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Products", new { area = "" })">
                    <button id="logout" type="submit" class="btn btn-link btn-secondary purple" style="font-weight: bold">&cross;</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        }
    </ul>

<style>
    .purple {
        font-size: 16px;
        background: purple;
        color: magenta;
    }
    .purple:hover, 
    .purple:focus {
        color: magenta;
        text-decoration: none;
    }
</style>